
TerrainLayer
^^^^^^^^^^^^^^^^

.. raw:: html

    
    <a id="deck-link" target="_blank" href="https://deck.gl/docs/api-reference/layers/terrain-layer">deck.gl docs</a>
    
    <br />

.. raw:: html
   :file: ./html/terrain_layer.html

.. raw:: html

    <style>
   .wy-nav-content {
        max-width: 100% !important;
    }
    #deck-container {
        height: 50vh;
        width: 100%;
    }
    #deck-link {
        float: right;
        position: relative;
        top: -20px;
    }
    </style>

Source
------

.. code-block:: python

    """
    TerrainLayer
    ===========

    Extruded terrain using AWS Open Data Terrain Tiles and Mapbox Satellite imagery
    """

    import pydeck as pdk
    import os

    # Import Mapbox API Key from environment
    MAPBOX_API_KEY = os.environ["MAPBOX_API_KEY"]

    # AWS Open Data Terrain Tiles
    TERRAIN_IMAGE = "https://s3.amazonaws.com/elevation-tiles-prod/terrarium/{z}/{x}/{y}.png"

    # Define how to parse elevation tiles
    ELEVATION_DECODER = {"rScaler": 256, "gScaler": 1, "bScaler": 1 / 256, "offset": -32768}

    SURFACE_IMAGE = f"https://api.mapbox.com/v4/mapbox.satellite/{{z}}/{{x}}/{{y}}@2x.png?access_token={MAPBOX_API_KEY}"

    terrain_layer = pdk.Layer(
        "TerrainLayer", elevation_decoder=ELEVATION_DECODER, texture=SURFACE_IMAGE, elevation_data=TERRAIN_IMAGE
    )

    view_state = pdk.ViewState(latitude=46.24, longitude=-122.18, zoom=11.5, bearing=140, pitch=60)

    r = pdk.Deck(terrain_layer, initial_view_state=view_state)

    r.to_html("terrain_layer.html")

